scalar Date
scalar DateTime

type Query {

  articleRecommendations(lang: String!): [ClusterRecommendations!]!

  articleRecommendations1(lang: String!): [ClusterRecommendation!]!

  article(artId: String!,lang: String!): Article

  translations: [Translation!]!
  
}

type Mutation {

  singleLinkRecommendations(transLang: String!, link: String!): ArticleRecommendations!

  signup(uid: String!, password: String!, name: String!, email: String!, nativeLang: String!): Message

  login(uid: String!): Auth!

  logout(uid: String!): Message

  updateUser(name: String, nativeLang: String): Message

  translation(lang: String, orginalText: String, artId: String): Translation!

}

type User {
  name: String
  nativeLang: String
}

type Message {
  message: String
}

type Auth {
  message: String!,
  token: String!
}

type Article {
  link: String!
  title: String!
  art_id: String!
  article: String!
  date: DateTime!
  translations: [Translation!]!
}

type ArticleRecommendation {
  link: String!
  title: String!
  art_id: String!
  lang: String!
  date: DateTime
}

type ArticleRecommendations {
  link: String!
  title: String!
  trans_lang: String!
  langt: String!
  recommendations: [ArticleRecommendation!]!
}

type Translation {
  orig_text: String! 
  trans_text: String! 
  art_id: String! 
  id: String!,
  uid: String!
}

type ClusterRecommendation {
  art_id: String!
  link: String!
  title: String!
  lang: String!
  date: DateTime!
}

type ClusterRecommendations {
  recs: [ClusterRecommendation!]!
}


